#!/usr/bin/env bash

_log() {
    local nc="\033[0m"
    local red="\033[1;31m"
    local green="\033[1;32m"
    local yellow="\033[1;33m"
    local log_level=$1; shift
    case $log_level in
	err)  printf "${red}ERR: "     >&2 ;;
	warn) printf "${yellow}WARN: " >&2 ;;
	info) printf "${green}INFO: "  >&2 ;;
	*)    printf "${green}INFO: "  >&2 ;;
    esac
    echo $@ >&2
    printf "${nc}" >&2
}

_warn() {
    _log warn $@
}

_err() {
    _log err $@
}

_info() {
    _log info $@
}

_check_root() {
    [[ $UID -eq 0 ]] || {
	echo 'Please, run this script with "root" privileges.' >&2
	exit 1
    }
}

_check_is_cluster_online() {
    local all_services=$(hctl mero status | grep "\s*\[.*\]")

    local is_ha_online=$(echo "$all_services" \
                        | grep "\s*\[\s*online\s*\].*halon")

    local is_ios_online=$(echo "$all_services" \
                        | grep "\s*\[\s*online\s*\].*ioservice")

    local is_confd_online=$(echo "$all_services" \
                          | grep "\s*\[\s*online\s*\].*confd")

    local has_m0t1fs=$(echo "$all_services" | grep m0t1fs)
    local is_m0t1fs_online=$(echo "$all_services" \
                           | grep "\s*\[\s*online\s*\].*m0t1fs")

    [[ -n $is_ha_online && -n $is_ios_online && -n $is_confd_online \
    && (-z $has_m0t1fs || -n $is_m0t1fs_online) ]]
}

_check_is_cluster_failed() {
    local all_services=$(hctl mero status | grep "\s*\[.*\]")

    local is_ha_failed=$(echo "$all_services" \
                        | grep "\s*\[\s*failed\s*\].*halon")

    local is_ios_failed=$(echo "$all_services" \
                        | grep "\s*\[\s*failed\s*\].*ioservice")

    local is_confd_failed=$(echo "$all_services" \
                          | grep "\s*\[\s*failed\s*\].*confd")

    local has_m0t1fs=$(echo "$all_services" | grep m0t1fs)
    local is_m0t1fs_failed=$(echo "$all_services" \
                           | grep "\s*\[\s*failed\s*\].*m0t1fs")

    [[ -n $is_ha_failed || -n $is_ios_failed || -n $is_confd_failed \
        || (-n $has_m0t1fs && -n $is_m0t1fs_failed) ]]
}
